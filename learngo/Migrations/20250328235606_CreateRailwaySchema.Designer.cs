// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace learngo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250328235606_CreateRailwaySchema")]
    partial class CreateRailwaySchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SectionName = "Основы Go"
                        },
                        new
                        {
                            Id = 2,
                            SectionName = "Конкурентность в Go"
                        },
                        new
                        {
                            Id = 3,
                            SectionName = "Веб-разработка на Go"
                        });
                });

            modelBuilder.Entity("Backend.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("TimeLimit")
                        .HasColumnType("int");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorEmail = "alex@example.com",
                            AuthorName = "Алексей Смирнов",
                            CreatedAt = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Основы синтаксиса и установка Go",
                            Difficulty = 1,
                            SectionId = 1,
                            TimeLimit = 60,
                            TopicName = "Введение в Go"
                        },
                        new
                        {
                            Id = 2,
                            AuthorEmail = "maria@example.com",
                            AuthorName = "Мария Петрова",
                            CreatedAt = new DateTime(2025, 3, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Работа с переменными и базовыми типами в Go",
                            Difficulty = 1,
                            SectionId = 1,
                            TimeLimit = 45,
                            TopicName = "Переменные и типы данных"
                        },
                        new
                        {
                            Id = 3,
                            AuthorEmail = "dmitry@example.com",
                            AuthorName = "Дмитрий Иванов",
                            CreatedAt = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Использование структур и интерфейсов в Go",
                            Difficulty = 2,
                            SectionId = 1,
                            TimeLimit = 90,
                            TopicName = "Структуры и интерфейсы"
                        },
                        new
                        {
                            Id = 4,
                            AuthorEmail = "elena@example.com",
                            AuthorName = "Елена Соколова",
                            CreatedAt = new DateTime(2025, 3, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Основы конкурентности с использованием горутин",
                            Difficulty = 2,
                            SectionId = 2,
                            TimeLimit = 75,
                            TopicName = "Горутины"
                        },
                        new
                        {
                            Id = 5,
                            AuthorEmail = "sergey@example.com",
                            AuthorName = "Сергей Кузнецов",
                            CreatedAt = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Синхронизация с помощью каналов в Go",
                            Difficulty = 3,
                            SectionId = 2,
                            TimeLimit = 90,
                            TopicName = "Каналы"
                        },
                        new
                        {
                            Id = 6,
                            AuthorEmail = "olga@example.com",
                            AuthorName = "Ольга Николаева",
                            CreatedAt = new DateTime(2025, 3, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Реализация пула работников с горутинами",
                            Difficulty = 3,
                            SectionId = 2,
                            TimeLimit = 120,
                            TopicName = "Паттерн Worker Pool"
                        },
                        new
                        {
                            Id = 7,
                            AuthorEmail = "igor@example.com",
                            AuthorName = "Игорь Васильев",
                            CreatedAt = new DateTime(2025, 3, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Разработка RESTful API с пакетом net/http",
                            Difficulty = 2,
                            SectionId = 3,
                            TimeLimit = 120,
                            TopicName = "Создание REST API"
                        },
                        new
                        {
                            Id = 8,
                            AuthorEmail = "tatiana@example.com",
                            AuthorName = "Татьяна Морозова",
                            CreatedAt = new DateTime(2025, 3, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Создание веб-приложений с фреймворком Gin",
                            Difficulty = 2,
                            SectionId = 3,
                            TimeLimit = 90,
                            TopicName = "Работа с Gin"
                        },
                        new
                        {
                            Id = 9,
                            AuthorEmail = "pavel@example.com",
                            AuthorName = "Павел Соколов",
                            CreatedAt = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Использование промежуточного ПО в веб-приложениях",
                            Difficulty = 3,
                            SectionId = 3,
                            TimeLimit = 105,
                            TopicName = "Middleware в Go"
                        });
                });

            modelBuilder.Entity("Backend.Models.Topic", b =>
                {
                    b.HasOne("Backend.Models.Section", "Section")
                        .WithMany("Topics")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Backend.Models.Section", b =>
                {
                    b.Navigation("Topics");
                });
#pragma warning restore 612, 618
        }
    }
}
